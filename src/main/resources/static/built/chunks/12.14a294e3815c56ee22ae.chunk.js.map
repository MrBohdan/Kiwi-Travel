{"version":3,"sources":["webpack:///./src/components/dashboard/js/metrics/audience-Overview-Responsive-Line.js"],"names":["CustomSymbol","size","color","borderWidth","borderColor","AudienceOverviewResponsiveLine","data","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","legend","scheme","theme","from","slice","background","padding","border","borderRadius","points","map","point","id","x","serieId","yFormatted"],"mappings":"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","file":"./chunks/12.14a294e3815c56ee22ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line'\r\n\r\n\r\nconst CustomSymbol = ({ size, color, borderWidth, borderColor }) => (\r\n    <g>\r\n        <circle fill=\"#fff\" r={size / 2} strokeWidth={borderWidth} stroke={borderColor} />\r\n        <circle\r\n            r={size / 5}\r\n            strokeWidth={borderWidth}\r\n            stroke={borderColor}\r\n            fill={color}\r\n            fillOpacity={0.35}\r\n        />\r\n    </g>\r\n)\r\n\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst AudienceOverviewResponsiveLine = ({ data }) => (\r\n    <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 20, right: 55, bottom: 45, left: 60 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false, }}\r\n        curve=\"monotoneX\"\r\n        enablePointLabel={true}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'top',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 25,\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 10,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'users',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        colors={{ scheme: 'nivo' }}\r\n        pointSymbol={CustomSymbol}\r\n        pointSize={10}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={1}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabel=\"users\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        enableSlices={'x'}\r\n        sliceTooltip={({ slice }) => {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        background: \"var(--light-pink)\",\r\n                        padding: '0.1rem 1rem',\r\n                        border: '1px solid var(--dark-brown)',\r\n                        borderRadius: '5px'\r\n                    }}\r\n                >\r\n                    {slice.points.map(point => (\r\n                        <div\r\n                            key={point.id}\r\n                            style={{\r\n                                color: \"var(--dark-brown)\",\r\n                                padding: '0.1rem 0',\r\n                            }}\r\n                        >\r\n                            <div> <strong>Date:</strong> {point.data.x}</div>\r\n                            <strong>{point.serieId}:</strong> {point.data.yFormatted}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        }}\r\n    />\r\n)\r\n\r\nexport default AudienceOverviewResponsiveLine;"],"sourceRoot":""}